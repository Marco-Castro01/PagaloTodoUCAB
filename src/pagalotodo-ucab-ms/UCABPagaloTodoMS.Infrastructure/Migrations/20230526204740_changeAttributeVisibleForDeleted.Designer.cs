// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UCABPagaloTodoMS.Infrastructure.Database;

#nullable disable

namespace UCABPagaloTodoMS.Infrastructure.Migrations
{
    [DbContext(typeof(UCABPagaloTodoDbContext))]
    [Migration("20230526204740_changeAttributeVisibleForDeleted")]
    partial class changeAttributeVisibleForDeleted
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CamposConciliacionEntityServicioEntity", b =>
                {
                    b.Property<Guid>("CamposConciliacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServicioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CamposConciliacionId", "ServicioId");

                    b.HasIndex("ServicioId");

                    b.ToTable("CamposConciliacionEntityServicioEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.CamposConciliacionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Longitud")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CamposConciliacion");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.PagoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("consumidorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("servicioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("consumidorId");

                    b.HasIndex("servicioId");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ServicioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PrestadorServicioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("accountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrestadorServicioId");

                    b.ToTable("Servicio");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.UsuarioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("passwordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UsuarioEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ValoresEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("deleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Valores");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.AdminEntity", b =>
                {
                    b.HasBaseType("UCABPagaloTodoMS.Core.Entities.UsuarioEntity");

                    b.HasDiscriminator().HasValue("AdminEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ConsumidorEntity", b =>
                {
                    b.HasBaseType("UCABPagaloTodoMS.Core.Entities.UsuarioEntity");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ConsumidorEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.PrestadorServicioEntity", b =>
                {
                    b.HasBaseType("UCABPagaloTodoMS.Core.Entities.UsuarioEntity");

                    b.Property<string>("rif")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PrestadorServicioEntity");
                });

            modelBuilder.Entity("CamposConciliacionEntityServicioEntity", b =>
                {
                    b.HasOne("UCABPagaloTodoMS.Core.Entities.CamposConciliacionEntity", null)
                        .WithMany()
                        .HasForeignKey("CamposConciliacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UCABPagaloTodoMS.Core.Entities.ServicioEntity", null)
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.PagoEntity", b =>
                {
                    b.HasOne("UCABPagaloTodoMS.Core.Entities.ConsumidorEntity", "consumidor")
                        .WithMany("pago")
                        .HasForeignKey("consumidorId");

                    b.HasOne("UCABPagaloTodoMS.Core.Entities.ServicioEntity", "servicio")
                        .WithMany("Pago")
                        .HasForeignKey("servicioId");

                    b.Navigation("consumidor");

                    b.Navigation("servicio");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ServicioEntity", b =>
                {
                    b.HasOne("UCABPagaloTodoMS.Core.Entities.PrestadorServicioEntity", "PrestadorServicio")
                        .WithMany("Servicio")
                        .HasForeignKey("PrestadorServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrestadorServicio");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ServicioEntity", b =>
                {
                    b.Navigation("Pago");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ConsumidorEntity", b =>
                {
                    b.Navigation("pago");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.PrestadorServicioEntity", b =>
                {
                    b.Navigation("Servicio");
                });
#pragma warning restore 612, 618
        }
    }
}
